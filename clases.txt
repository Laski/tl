[Nodo]
[Nodo]->[NPrograma|DiccFunciones funciones; NPloteo& ploteo]
[Nodo]->[NFuncion| NIdentificador& id;ListaVariables& parametros;NBloque& bloque;]
[Nodo]->[NPloteo|NLlamadaFuncion& func1;NLlamadaFuncion& func2;	NIdentificador& var;NExpresion& desde;NExpresion& paso;	NExpresion& hasta;]
[Nodo]->[NBloque|ListaSentencias& sentencias]
[Nodo]->[NSentencia||evaluar()]
[NSentencia]->[NReturn|NExpresion& expresion|evaluar()]
[NSentencia]->[NIfThen|	NCondicion& cond; NBloque& bloque | evaluar()]
[NSentencia]->[NIfThenElse| NCondicion& cond; NBloque& bloqueT;	NBloque& bloqueF;| evaluar()]
[NSentencia]->[NWhile|	NCondicion& cond;NBloque& bloque;|evaluar()]
[NSentencia]->[NAsignacion|NIdentificador& lhs;	NExpresion& rhs;|evaluar()]
[Nodo]->[NExpresion]
[NExpresion]->[NNumero|double value]
[NExpresion]->[NLlamadaFuncion|	NIdentificador& id; ListaExpresiones argumentos;|evaluar()]
[NExpresion]->[NOperacionAritmetica|int cod_op;	NExpresion& expr1; NExpresion& expr2;|evaluar()]
[NNumero]->[NDouble|double value;|evaluar()]
[NExpresion]->[NIdentificador|string nombre;|evaluar()]
[Nodo]->[NCondicion]
[NCondicion]->[NOperacionBooleana|int cod_op;NCondicion& cond1;	NCondicion& cond2;|evaluar()]
[NCondicion]->[NComparacion|int cod_op;	NExpresion& expr1;NExpresion& expr2;|evaluar()]
